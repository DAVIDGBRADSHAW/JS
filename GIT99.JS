/*
 * Unit 3 Control Statements Challenge Solutions
 */

"use strict";


//Challenge 1
/*
 * Returns the smaller of the arguments x and y.  This method implements
 * min using the longer if-then-else form.
 */

function min(x, y) {
   if (x < y) {
      return x;
   } else {
      return y;
   }
}

/*
 * Returns the smaller of the arguments x and y.  This method implements
 * min using the question-mark-colon operator.
 */

function min2(x, y) {
   return (x < y) ? x : y;
}

//Challenge 2
/*
 * Returns the largest of the three arguments x, y, and z.  This
 * implementation simply calls the two-argument version.
 */

function max3(x, y, z) {
   return max(x, max(y, z));
}

/*
 * Returns the larger of the arguments x and y.  This method implements
 * max using the longer if-then-else form.
 */

function max(x, y) {
   if (x > y) {
      return x;
   } else {
      return y;
   }
}

//Challenge 3

/* Constants */

const N_BOTTLES = 99;

/*
 * Displays the lyrics to "99 Bottles of Beer on the Wall."
 */

function BottlesOfBeer() {
   let bottles = N_BOTTLES;
   while (bottles > 0) {
      if (bottles === 1) {
         console.log("1 bottle of beer on the wall.");
         console.log("1 bottle of beer.");
      } else {
         console.log(bottles + " bottles of beer on the wall.");
         console.log(bottles + " bottles of beer.");
      }
      bottles--;
      console.log("You take one down, pass it around.");
      switch (bottles) {
       case 0:
         console.log("No more bottles of beer on the wall.");
         break;
       case 1:
         console.log("Only one bottle of beer on the wall.");
         break;
       default:
         console.log(bottles + " bottles of beer on the wall.");
         break;
      }
      console.log("");
   }
}

